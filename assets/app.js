;(function () {

  var editor, preview, output, error;

  CodeMirror.registerHelper("lint", "javascript", validator);
  function validator(text, options) {
    if (!error) return [];
    var from = CodeMirror.Pos(error.lineNumber-1, error.column);
    var to = CodeMirror.Pos(error.lineNumber-1, error.column+90);
    return [
      { from: from,
        to: to,
        severity: 'error',
        message: error.description }
    ];
  }

  var defaultText = [
    'function add(x, y) {',
    '  // Welcome to the new js2coffee, now',
    '  // rewritten to use esprima, currently',
    '  // in development.',
    '  return x + y;',
    '}'
  ].join("\n");

  ready(function () {
    editor = CodeMirror(q('.code-box.left'), {
      value: defaultText,
      theme: 'ambiance',
      mode: 'javascript',
      tabSize: 2,
      gutters: ["CodeMirror-lint-markers"],
      lint: true,
      autofocus: true
    });

    preview = CodeMirror(q('.code-box.right'), {
      value: defaultText,
      theme: 'ambiance',
      mode: 'coffeescript',
      tabSize: 2
    });

    editor.on('change', update);
    update();
  });

  function update() {
    var input = editor.getValue();

    try {
      output = Js2coffee.build(input);
      error = null;
      var kode = output.code;
      kode += "\n# ---\n# Generated by js2coffee-redux " +
        Js2coffee.version;
      preview.setValue(kode);
    } catch (err) {
      error = err;
    }
  }

  /*
   * Helpers taken from npmjs.com/dom101
   */

  function ready (fn) {
    if (document.addEventListener) {
      document.addEventListener('DOMContentLoaded', fn);
    } else {
      document.attachEvent('onreadystatechange', function() {
        if (document.readyState === 'interactive') fn();
      });
    }
  }

  function q (query) {
    return document.querySelector(query);
  }

  function on (el, event, handler) {
    if (el.addEventListener) {
      el.addEventListener(event, handler);
    } else {
      el.attachEvent('on' + event, function(){
        handler.call(el);
      });
    }
  }

})();
